#로그 설정 = 로그레벨(DEBUG ~ FATAL, OFF일경우 로그사용안함), 사용할 로그영역
#stdout, file, db
#log4j.rootLogger=DEBUG, stdout, file, db
log4j.rootLogger=DEBUG, stdout, file


#Log console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Threshold=INFO
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%5p] [%d{yyyyMMdd HH:mm:ss}] (%F:%L) - %m%n


#Log File
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
log4j.appender.file.Threshold=INFO
log4j.appender.file.DatePattern='.'yyyy-MM-dd
log4j.appender.file.File=${catalina.base}/logs/breakout/analyze/analyze.log
#log4j.appender.file.File=D:/tomcat/breakout/analyze/analyze.log
#log4j.appender.file.File=/data/logs/breakout/analyze/analyze.log
log4j.appender.file.Encoding=utf-8
log4j.appender.file.Append=true
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=[%5p] [%d{yyyyMMdd HH:mm:ss}] (%F:%L) - %m%n


##Log DB
#log4j.appender.db=org.apache.log4j.jdbc.JDBCAppender
#log4j.appender.db.Threshold=INFO
#log4j.appender.db.driver=com.mysql.jdbc.Driver
#log4j.appender.db.URL=jdbc:mysql://localhost:3306/living?characterEncoding=utf8&amp;autoReconnect=true
#log4j.appender.db.user=sourapples
#log4j.appender.db.password=sourapples1
#log4j.appender.db.sql=INSERT INTO SERVER_LOG (LEVEL, IP, URI, METHOD, ACCESS_TYPE, SESSION, ID, ACT, PARAM, MSG, LOG ) VALUES ('%p', '%X{ip}', '%X{uri}', '%X{method}', '%X{access_type}', '%X{session}', '%X{id}', '%X{act}', '%X{param}', '%X{msg}', "%m" )



# Log Level
# TRACE : 가장 상세한 정보를 나타낼 때 사용한다.
# DEBUG : 일반 정보를 상세히 나타낼 때 사용한다.
# INFO  : 일반 정보를 나타낼 때 사용한다.
# WARN  : 에러는 아니지만 주의할 필요가 있을 때 사용한다.
# ERROR : 일반 에러가 일어 났을 때 사용한다.
# FATAL : 가장 크리티컬한 에러가 일어 났을 때 사용한다
 
# Options
# %d : 로깅 이벤트가 일어난 날자(date)
# %p : 로깅 이벤트의 priority
# %t : 로깅 이벤트를 생성한 스레드 이름
# %c : 로깅 이벤트의 category
# %F : 로깅요청을 일으킨 파일 이름
# %L : 로깅요청을 일으킨 파일의 행번호
# %x : 로깅이벤트를 발생시킨 스레드에 관련된 내포검사항목 (Nested Diagnostic Context : NDC)을 출력
# %X : 로깅이벤트를 발생시킨 스레드에 관련된 내포검사항목 (Mapped Diagnostic Context : MDC)을 출력
# %C : 로깅요청을 일으킨 호출자의 완전한 클래스이름
# %M : 로깅요청을 일으킨 메소드
# %m : 로그 메세지
# %n : 플랫폼 독립적인 개행문자
# %l : 소스코드의 위치정보를 출력한다. %C. %M(%F:%L) 의 축약형
# %r : 어플리케이션 시작 이후부터 로깅이 발생한 시점의 시간 (milliseconds)
